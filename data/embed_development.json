{"category":{"name":"Development","normalized_name":"development","subcategories":[{"name":"Experimentation","normalized_name":"experimentation"},{"name":"Development","normalized_name":"development"},{"name":"Interpretability","normalized_name":"interpretability"},{"name":"Model Training","normalized_name":"model-training"},{"name":"Federated learning","normalized_name":"federated-learning"}]},"foundation":"PyTorch","items":[{"category":"Development","id":"development--experimentation--anomalib","name":"Anomalib","logo":"logos/79211c70ad6c0b096a678d6642e449e908438c6ba9ea651323b55b258a1a99ac.svg","subcategory":"Experimentation","website":"https://anomalib.readthedocs.io/en/latest/","description":"An anomaly detection library comprising state-of-the-art algorithms and features such as experiment management, hyper-parameter optimization, and edge inference.","primary_repository_url":"https://github.com/openvinotoolkit/anomalib"},{"category":"Development","id":"development--experimentation--avalanche","name":"avalanche","logo":"logos/6db724b646af4bb6a96bf1e939a4018ee5f01db33e92af69a611275266ba90f5.svg","subcategory":"Experimentation","website":"http://avalanche.continualai.org/","description":"Avalanche is an End-to-End Continual Learning Library based on PyTorch, for fast prototyping, training, and reproducible evaluation of continual learning algorithms.","primary_repository_url":"https://github.com/ContinualAI/avalanche"},{"category":"Development","id":"development--experimentation--baal","name":"baal","logo":"logos/e52fe477062933115c9eee93722f40f2dba311e6935fb12b5bf490fc94c26eb5.svg","subcategory":"Experimentation","website":"https://baal.readthedocs.io/","description":"Baal is a Bayesian active learning library. Provides methods to do posterior distribution sampling in order to maximize the efficiency of labelling during active learning. Our library is suitable for research and industrial applications.","primary_repository_url":"https://github.com/baal-org/baal"},{"category":"Development","id":"development--experimentation--botorch","name":"BoTorch","logo":"logos/bf6001cce117af4ae13495875da21ba11ba34f5d42b525ce555f61452ad9fc6d.svg","subcategory":"Experimentation","website":"https://botorch.org/","description":"A Framework for Efficient Monte-Carlo Bayesian Optimization","primary_repository_url":"https://github.com/pytorch/botorch"},{"category":"Development","id":"development--experimentation--ignite","name":"Ignite","logo":"logos/35bb1388cfcd432baba2f56afef9724cf9bbeca68724e9adcb4232272ad8309f.svg","subcategory":"Experimentation","website":"https://pytorch-ignite.ai/","description":"High-level library to help with training and evaluating neural networks in PyTorch","primary_repository_url":"https://github.com/pytorch/ignite"},{"category":"Development","id":"development--experimentation--joeynmt","name":"joeynmt","logo":"logos/817179366550e656ee07a69f74369f9b49b23e815c2d4c3d5a092fbf4318dbc9.svg","subcategory":"Experimentation","website":"https://joeynmt.readthedocs.io/en/latest/#","description":"JoeyNMT is a minimalist neural machine translation toolkit for educational purposes.","primary_repository_url":"https://github.com/joeynmt"},{"category":"Development","id":"development--experimentation--pomegranate","name":"Pomegranate","logo":"logos/ebf8effc430934c78a17464087fe36856c0dfe2c390f3e278beac637efb264e0.svg","subcategory":"Experimentation","website":"https://pomegranate.readthedocs.io/en/latest/","description":"pomegranate is a Python package that implements fast and flexible probabilistic models ranging from individual probability distributions to compositional models such as Bayesian networks and hidden Markov models","primary_repository_url":"https://github.com/jmschrei/pomegranate"},{"category":"Development","id":"development--experimentation--pysyft","name":"PySyft","logo":"logos/ddcdd70695dcc0780072851c60375522b8a616c35ffdec80717cf32b87d21310.svg","subcategory":"Experimentation","website":"https://www.openmined.org/","description":"Perform data science on data that remains in someone else's server","primary_repository_url":"https://github.com/OpenMined/PySyft"},{"category":"Development","id":"development--experimentation--usb","name":"USB","logo":"logos/ba2f979d55cfe3b448250c198b2c08437accb672f3f21600f0b3c979a399c9e7.svg","subcategory":"Experimentation","website":"https://usb.readthedocs.io/en/main/","description":"Benchmark tool for developing and evaluating Semi-suprevised learning algorithms.  Includes an implementation of 14 SSL algorithms and 15 tasks for evaluation for CV, NLP, and Audio","primary_repository_url":"https://github.com/microsoft/Semi-supervised-learning"},{"category":"Development","id":"development--development--pypots","name":"PyPOTS","logo":"logos/9b443ae59bd33bdee86bbe1d3190c727ce938845d8696ac8e76bd7c662c822a2.svg","subcategory":"Development","website":"https://pypots.com/","description":"a Python toolbox for machine learning on Partially-Observed Time Series","primary_repository_url":"https://github.com/WenjieDu/PyPOTS"},{"category":"Development","id":"development--development--pyro","name":"Pyro","logo":"logos/ed7e2a4d5d7f216c73dc8d10febb6720c12b706bd262296605f82b5f01801d60.svg","subcategory":"Development","website":"https://pyro.ai/","description":"Deep universal probabilistic programming with Python and PyTorch","primary_repository_url":"https://github.com/pyro-ppl/pyro"},{"category":"Development","id":"development--development--skorch","name":"skorch","logo":"logos/5fd4c8f1c65f2f5281e64ebe6b8e82bca7b16608042672804f452b8d8f2b1d98.svg","subcategory":"Development","website":"https://github.com/skorch-dev/skorch","description":"A scikit-learn compatible neural network library that wraps PyTorch.","primary_repository_url":"https://github.com/skorch-dev/skorch"},{"category":"Development","id":"development--development--torchdistill","name":"torchdistill","logo":"logos/00e6cd8399a844be633526e835a2bff2a35c27c464134204177f96b484d0b393.svg","subcategory":"Development","website":"https://yoshitomo-matsubara.net/torchdistill/","description":"Offers various state-of-the-art knowledge distillation methods and enables you to design (new) experiments simply by editing a declarative yaml config file.","primary_repository_url":"https://github.com/yoshitomo-matsubara/torchdistill"},{"category":"Development","id":"development--interpretability--captum","name":"Captum","logo":"logos/2abc1fc7558376c329b2798f7bcde761b3644e8805d84dc631370e0e76d75b8d.svg","subcategory":"Interpretability","website":"https://captum.ai/docs/introduction.html","description":"An open source, extensible library for model interpretability built on PyTorch.","primary_repository_url":"https://github.com/pytorch/captum"},{"category":"Development","id":"development--interpretability--opencompass","name":"OpenCompass","logo":"logos/7a70f2cbec75cbed6adfa360674d53e5fd6536ee1b342b52588a3dbd35ef8860.svg","subcategory":"Interpretability","website":"https://opencompass.org.cn/home","description":"OpenCompass is an LLM evaluation platform, supporting a wide range of models (Llama3, Mistral, InternLM2,GPT-4,LLaMa2, Qwen,GLM, Claude, etc) over 100+ datasets.","primary_repository_url":"https://github.com/open-compass/opencompass"},{"category":"Development","id":"development--model-training--opacus","name":"Opacus","logo":"logos/93e7f58529785d31148daadf57a83ea2c2f8a5881b6825df426596b79b6954ad.svg","subcategory":"Model Training","website":"https://opacus.ai/","description":"Train PyTorch models with Differential Privacy","primary_repository_url":"https://github.com/pytorch/opacus"},{"category":"Development","id":"development--federated-learning--substra","name":"Substra","logo":"logos/57e63c3a4288f965a164da315553b98b67b369bbee4e6d9a24cdfd6cb43bc380.svg","subcategory":"Federated learning","website":"https://docs.substra.org/","description":"Substra is used to run complex federated learning experiments at scale.","primary_repository_url":"https://github.com/Substra"}]}