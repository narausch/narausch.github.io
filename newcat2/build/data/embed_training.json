{"category":{"name":"Training","normalized_name":"training","subcategories":[{"name":"General","normalized_name":"general"},{"name":"Probabilistic & Optimization","normalized_name":"probabilistic-optimization"},{"name":"Privacy","normalized_name":"privacy"},{"name":"Continuous Learning","normalized_name":"continuous-learning"},{"name":"Federated Learning","normalized_name":"federated-learning"},{"name":"Reinforcement Learning","normalized_name":"reinforcement-learning"},{"name":"Graph","normalized_name":"graph"},{"name":"Multimodal","normalized_name":"multimodal"},{"name":"Self supervised","normalized_name":"self-supervised"},{"name":"Distributed","normalized_name":"distributed"},{"name":"Quantum","normalized_name":"quantum"}]},"foundation":"PyTorch","items":[{"category":"Training","id":"training--general--adaptdl","name":"AdaptDL","logo":"logos/532512bdae901d661538ee38bb165d61918199ab2ba8f4d4cf0fddb2ed742647.svg","subcategory":"General","website":"https://adaptdl.readthedocs.io/en/latest/","description":"AdaptDL is a resource-adaptive deep learning (DL) training and scheduling framework, and is part of the CASL open source project.","primary_repository_url":"https://github.com/petuum/adaptdl"},{"category":"Training","id":"training--general--catalyst","name":"Catalyst","logo":"logos/b8f9b0d3ee7df42d688ddfaf95b3177f256d68521167ac27b601778e339fbedc.svg","subcategory":"General","website":"https://catalyst-team.com/","description":"Catalyst is a PyTorch framework for Deep Learning Research and Development. It focuses on reproducibility, rapid experimentation, and codebase reuse so you can create something new rather than write yet another train loop.","primary_repository_url":"https://github.com/catalyst-team/catalyst"},{"category":"Training","id":"training--general--colossalai","name":"ColossalAI","logo":"logos/2125379104f8c98deea6e3dd3e0b2af88238792c2f41420624c1a142642c69ca.svg","subcategory":"General","website":"https://www.colossalai.org/","description":"Tools to kickstart distributed training and inference","primary_repository_url":"https://github.com/hpcaitech/ColossalAI"},{"category":"Training","id":"training--general--composer","name":"composer","logo":"logos/23206110f1d95753c27e1ebe4c63c6bc2c3b86060c4b332516cd9a3931f1900f.svg","subcategory":"General","website":"http://docs.mosaicml.com/","description":"A open-source deep learning training library optimized for scalability and usability, integrating best practices for efficient, multi-node training","primary_repository_url":"https://github.com/mosaicml/composer"},{"category":"Training","id":"training--general--fastai","name":"fastai","logo":"logos/9b1d9cefe662d9c4a595cbe44fddc8c2d31a2390f6ac3ac0ae025a8c878a53ce.svg","subcategory":"General","website":"https://docs.fast.ai/","description":"fastai is a deep learning library which provides practitioners with high-level components that can quickly and easily provide state-of-the-art results in standard deep learning domains, and provides researchers with low-level components that can be mixed and matched to build new approaches","primary_repository_url":"https://github.com/fastai/fastai"},{"category":"Training","id":"training--general--hummingbird","name":"Hummingbird","logo":"logos/c0d704d4e08b297aadf925661feaf0dece433d3da38e551a9b0b0d326880447f.svg","subcategory":"General","website":"https://github.com/microsoft/hummingbird","description":"Hummingbird is a library for compiling trained traditional ML models into tensor computations. Hummingbird allows users to seamlessly leverage neural network frameworks (such as PyTorch) to accelerate traditional ML models.","primary_repository_url":"https://github.com/microsoft/hummingbird"},{"category":"Training","id":"training--general--ignite","name":"Ignite","logo":"logos/35bb1388cfcd432baba2f56afef9724cf9bbeca68724e9adcb4232272ad8309f.svg","subcategory":"General","website":"https://pytorch-ignite.ai/","description":"High-level library to help with training and evaluating neural networks in PyTorch","primary_repository_url":"https://github.com/pytorch/ignite"},{"category":"Training","id":"training--general--ludwig","name":"ludwig","logo":"logos/6e299a3f1f6df294a97064d136dd13a8078ec5ccc3d9cfdf4f3f57faf17e4b3b.svg","subcategory":"General","website":"https://ludwig.ai/latest/","description":"Ludwig is a low-code framework for building custom AI models like LLMs and other deep neural networks.","primary_repository_url":"https://github.com/ludwig-ai/ludwig"},{"category":"Training","id":"training--general--poutyne","name":"Poutyne","logo":"logos/a291fe1f4346bc027619c3baebe8eccb7043cece79f64e2582a80056699faa44.svg","subcategory":"General","website":"https://poutyne.org/","description":"Poutyne is a simplified framework for PyTorch and handles much of the boilerplating code needed to train neural networks.","primary_repository_url":"https://github.com/GRAAL-Research/poutyne"},{"category":"Training","id":"training--general--pytorch-lightning","name":"PyTorch Lightning","logo":"logos/9ea7a73b721cef9519fd2ac3cc48b9dd167e210bda4ce34ae8c8984d9ad28ebd.svg","subcategory":"General","website":"https://lightning.ai/","description":"Pretrain, finetune and deploy AI models on multiple GPUs, TPUs with zero code changes.","primary_repository_url":"https://github.com/Lightning-AI/pytorch-lightning"},{"category":"Training","id":"training--general--skorch","name":"skorch","logo":"logos/5fd4c8f1c65f2f5281e64ebe6b8e82bca7b16608042672804f452b8d8f2b1d98.svg","subcategory":"General","website":"https://github.com/skorch-dev/skorch","description":"A scikit-learn compatible neural network library that wraps PyTorch.","primary_repository_url":"https://github.com/skorch-dev/skorch"},{"category":"Training","id":"training--general--stoke","name":"stoke","logo":"logos/00076432de043a325ce5d921de4d7474db9c0f85e50fdc5f48ef3bc425417831.svg","subcategory":"General","website":"https://fidelity.github.io/stoke/","description":"A lightweight wrapper for PyTorch that provides a simple declarative API for context switching between devices (e.g. CPU, GPU), distributed modes, mixed-precision, and PyTorch extensions. This allows you to switch from local full-precision CPU to mixed-precision distributed multi-GPU with extensions (like optimizer state sharding) by simply changing a few declarative flags.","primary_repository_url":"https://github.com/StanfordPL/stoke"},{"category":"Training","id":"training--general--torchdistill","name":"torchdistill","logo":"logos/00e6cd8399a844be633526e835a2bff2a35c27c464134204177f96b484d0b393.svg","subcategory":"General","website":"https://yoshitomo-matsubara.net/torchdistill/","description":"Offers various state-of-the-art knowledge distillation methods and enables you to design (new) experiments simply by editing a declarative yaml config file.","primary_repository_url":"https://github.com/yoshitomo-matsubara/torchdistill"},{"category":"Training","id":"training--general--torchmetrics","name":"TorchMetrics","logo":"logos/fe7ab2ceb03b0c3b20725bb4810500052a76b2285265de910812dfa0abbbdf6c.svg","subcategory":"General","website":"https://lightning.ai/docs/torchmetrics/","description":"Machine learning metrics for distributed, scalable PyTorch applications.","primary_repository_url":"https://github.com/Lightning-AI/torchmetrics"},{"category":"Training","id":"training--probabilistic-optimization--baal","name":"baal","logo":"logos/e52fe477062933115c9eee93722f40f2dba311e6935fb12b5bf490fc94c26eb5.svg","subcategory":"Probabilistic & Optimization","website":"https://baal.readthedocs.io/","description":"Baal is a Bayesian active learning library. Provides methods to do posterior distribution sampling in order to maximize the efficiency of labelling during active learning. Our library is suitable for research and industrial applications.","primary_repository_url":"https://github.com/baal-org/baal"},{"category":"Training","id":"training--probabilistic-optimization--botorch","name":"BoTorch","logo":"logos/bf6001cce117af4ae13495875da21ba11ba34f5d42b525ce555f61452ad9fc6d.svg","subcategory":"Probabilistic & Optimization","website":"https://botorch.org/","description":"A Framework for Efficient Monte-Carlo Bayesian Optimization","primary_repository_url":"https://github.com/pytorch/botorch"},{"category":"Training","id":"training--probabilistic-optimization--gpytorch","name":"GPyTorch","logo":"logos/edd7c89043cddc740dd6ccd3746aee9f57a590b76e93440eff93fb7272c3f4ce.svg","subcategory":"Probabilistic & Optimization","website":"https://arxiv.org/abs/1809.11165","description":"GPyTorch is a Gaussian process library implemented using PyTorch. GPyTorch is designed for creating scalable, flexible, and modular Gaussian process models with ease","primary_repository_url":"https://github.com/cornellius-gp/gpytorch"},{"category":"Training","id":"training--probabilistic-optimization--optuna","name":"Optuna","logo":"logos/221ccf5311fc9739ea42133e7727c4e1e3bbdb761fee27e5f71434e93ea35740.svg","subcategory":"Probabilistic & Optimization","website":"https://optuna.org/","description":"Optuna is an automatic hyperparameter optimization software framework, particularly designed for machine learning.","primary_repository_url":"https://github.com/optuna/optuna"},{"category":"Training","id":"training--probabilistic-optimization--pomegranate","name":"Pomegranate","logo":"logos/ebf8effc430934c78a17464087fe36856c0dfe2c390f3e278beac637efb264e0.svg","subcategory":"Probabilistic & Optimization","website":"https://pomegranate.readthedocs.io/en/latest/","description":"pomegranate is a Python package that implements fast and flexible probabilistic models ranging from individual probability distributions to compositional models such as Bayesian networks and hidden Markov models","primary_repository_url":"https://github.com/jmschrei/pomegranate"},{"category":"Training","id":"training--probabilistic-optimization--pyro","name":"Pyro","logo":"logos/ed7e2a4d5d7f216c73dc8d10febb6720c12b706bd262296605f82b5f01801d60.svg","subcategory":"Probabilistic & Optimization","website":"https://pyro.ai/","description":"Deep universal probabilistic programming with Python and PyTorch","primary_repository_url":"https://github.com/pyro-ppl/pyro"},{"category":"Training","id":"training--privacy--crypten","name":"CrypTen","logo":"logos/a84661f05548b18ae3aa8e49e95af0fbcc12300d9482db746e87a8ab2f596531.svg","subcategory":"Privacy","website":"https://crypten.readthedocs.io/en/latest/","description":"CrypTen is a Privacy Preserving Machine Learning framework written using PyTorch to train models using encrypted data. It is currently not production ready and its main use is as a research framework","primary_repository_url":"https://github.com/facebookresearch/CrypTen"},{"category":"Training","id":"training--privacy--opacus","name":"Opacus","logo":"logos/93e7f58529785d31148daadf57a83ea2c2f8a5881b6825df426596b79b6954ad.svg","subcategory":"Privacy","website":"https://opacus.ai/","description":"Train PyTorch models with Differential Privacy","primary_repository_url":"https://github.com/pytorch/opacus"},{"category":"Training","id":"training--privacy--pysyft","name":"PySyft","logo":"logos/ddcdd70695dcc0780072851c60375522b8a616c35ffdec80717cf32b87d21310.svg","subcategory":"Privacy","website":"https://www.openmined.org/","description":"Perform data science on data that remains in someone else's server","primary_repository_url":"https://github.com/OpenMined/PySyft"},{"category":"Training","id":"training--continuous-learning--avalanche","name":"avalanche","logo":"logos/6db724b646af4bb6a96bf1e939a4018ee5f01db33e92af69a611275266ba90f5.svg","subcategory":"Continuous Learning","website":"http://avalanche.continualai.org/","description":"Avalanche is an End-to-End Continual Learning Library based on PyTorch, for fast prototyping, training, and reproducible evaluation of continual learning algorithms.","primary_repository_url":"https://github.com/ContinualAI/avalanche"},{"category":"Training","id":"training--continuous-learning--renate","name":"Renate","logo":"logos/e9fb21ed75b6d1f586d07a501eb6f349489335f0bbc79c436f625b5f0e753577.svg","subcategory":"Continuous Learning","website":"https://renate.readthedocs.io/en/latest/","description":"Renate is a Python package for automatic retraining of neural networks models. It uses advanced Continual Learning and Lifelong Learning algorithms to achieve this purpose.","primary_repository_url":"https://github.com/awslabs/renate"},{"category":"Training","id":"training--federated-learning--flower","name":"Flower","logo":"logos/af4acf3f0922e8bb18cd7439136d299b7c8ddd7c5b8e7574bb31c17c6b4450b1.svg","subcategory":"Federated Learning","website":"https://flower.ai/","description":"A unified approach to federated learning, analytics, and evaluation. Federate any workload, any ML framework, and any programming language","primary_repository_url":"https://github.com/adap/flower"},{"category":"Training","id":"training--federated-learning--substra","name":"Substra","logo":"logos/57e63c3a4288f965a164da315553b98b67b369bbee4e6d9a24cdfd6cb43bc380.svg","subcategory":"Federated Learning","website":"https://docs.substra.org/","description":"Substra is used to run complex federated learning experiments at scale.","primary_repository_url":"https://github.com/Substra"},{"category":"Training","id":"training--reinforcement-learning--pfrl","name":"PFRL","logo":"logos/e207d794eaca709d5667f9e92cefba0497d2124c413b11e863c1246dc2307b89.svg","subcategory":"Reinforcement Learning","website":"https://github.com/pfnet/pfrl","description":"PFRL is a PyTorch-based deep reinforcement learning library","primary_repository_url":"https://github.com/pfnet/pfrl"},{"category":"Training","id":"training--reinforcement-learning--stable-baselines3","name":"Stable Baselines3","logo":"logos/a0f8f03828e020f203be7c6c0e19ccab88e2fe89feeaad3d517c79033bae9edf.svg","subcategory":"Reinforcement Learning","website":"https://stable-baselines3.readthedocs.io/","description":"Stable Baselines3 (SB3) is a set of implementations of reinforcement learning algorithms","primary_repository_url":"https://github.com/DLR-RM/stable-baselines3"},{"category":"Training","id":"training--graph--pytorch-geometric","name":"PyTorch Geometric","logo":"logos/5bf81a10e91e5b5336f31c52500e47e02dc3c860f3d66c7b4936161107dc12c9.svg","subcategory":"Graph","website":"https://pyg.org/","description":"Graph Neural Network Library for PyTorch","primary_repository_url":"https://github.com/pyg-team/pytorch_geometric"},{"category":"Training","id":"training--graph--pytorch-geometric-temporal","name":"PyTorch Geometric Temporal","logo":"logos/e178f77ad4a1b8ba7fa3e617cc445a8b47c1dd88a61972330752cc7ee6dbdd21.svg","subcategory":"Graph","website":"https://github.com/benedekrozemberczki/pytorch_geometric_temporal","description":"PyTorch Geometric Temporal is a Spatiotemporal Signal Processing with Neural Machine Learning Models","primary_repository_url":"https://github.com/benedekrozemberczki/pytorch_geometric_temporal"},{"category":"Training","id":"training--multimodal--pykale","name":"PyKale","logo":"logos/1514ccbb316a3ae5a772df0cb382bd6917c12793cc8174f0699d4fb19d1acec0.svg","subcategory":"Multimodal","website":"https://pykale.github.io/","description":"PyKale has a unified pipeline-based API and focuses on multimodal learning and transfer learning for graphs, images, and videos at the moment, with supporting models on deep learning and dimensionality reduction.","primary_repository_url":"https://github.com/pykale/pykale"},{"category":"Training","id":"training--self-supervised--pytorch-metric-learning","name":"PyTorch Metric Learning","logo":"logos/64fe0aa1a6facd5730cee30d3904885e90f56c6cc79d9f9edda241ecf4585ff7.svg","subcategory":"Self supervised","website":"https://kevinmusgrave.github.io/pytorch-metric-learning/","description":"Modular, flexible, and extensible library for deep metric learning.","primary_repository_url":"https://github.com/KevinMusgrave/pytorch-metric-learning"},{"category":"Training","id":"training--distributed--ray","name":"Ray","logo":"logos/3975c0f455d00dfab6b5c78281eb7c5dd6ffcf105bcc8c78764eb09a5ed534a6.svg","subcategory":"Distributed","website":"https://github.com/ray-project/ray","description":"Ray is a unified framework for scaling AI and Python applications. Ray consists of a core distributed runtime and a set of AI Libraries for accelerating ML workloads.","primary_repository_url":"https://github.com/ray-project/ray"},{"category":"Training","id":"training--quantum--torchquantum","name":"TorchQuantum","logo":"logos/eba8a1f3cf2a73d23a295af0b6e67dcb61560ca1630acae2f929fea8cd863b90.svg","subcategory":"Quantum","website":"https://hanruiwanghw.wixsite.com/torchquantum","description":"A framework for Quantum Classical Simulation, Quantum Machine Learning, Quantum Neural Networks, Parameterized Quantum Circuits with support for easy deployments on real quantum computers.","primary_repository_url":"https://github.com/mit-han-lab/torchquantum"}]}